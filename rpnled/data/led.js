function runCmd(e,_,a,C,t){function c(e){e>k&&(E=1,alert("Stack underflow!"))}function n(e){k>STACK_SIZE-e&&(E=1,alert("Stack overflow!"))}function s(e,_){return Math.min(e,_)}function r(e,_){return Math.max(e,_)}function I(e){return Math.abs(e)}function o(e){return Math.floor(Math.random()*e)}for(var T=e.length,k=0,E=0,d=-1,S=0,l=0;T>l;l++){switch(t&&console.log(stack.slice(0,k),e[l]),e[l]){case C_RGB:return c(3),CRGB(stack[k-3],stack[k-2],stack[k-1]);case C_HSV:return c(3),CHSV(stack[k-3],stack[k-2],stack[k-1]);case C_HUE:return c(1),CHSV(stack[k-1],255,255);case C_VALUE:return c(1),CHSV(0,0,stack[k-1]);case C_TIME:n(1),stack[k]=_,k-=-1;break;case C_TIMESHIFT:c(1),stack[k-1]=_>>stack[k-1];break;case C_INDEX:n(1),stack[k]=a,k-=-1;break;case C_RANDOM8:n(1),stack[k]=o(256),k-=-1;break;case C_RANDC:n(1),stack[k]=C,k-=-1;break;case C_RSHIFT:c(2),stack[k-2]=stack[k-2]>>stack[k-1],k-=1;break;case C_LSHIFT:c(2),stack[k-2]=stack[k-2]<<stack[k-1],k-=1;break;case C_BITAND:c(2),stack[k-2]=stack[k-2]&stack[k-1],k-=1;break;case C_BITOR:c(2),stack[k-2]=stack[k-2]|stack[k-1],k-=1;break;case C_BITXOR:c(2),stack[k-2]=stack[k-2]^stack[k-1],k-=1;break;case C_BITNOT:c(1),stack[k-1]=~stack[k-1];break;case C_AND:c(2),stack[k-2]=stack[k-2]&&stack[k-1],k-=1;break;case C_OR:c(2),stack[k-2]=stack[k-2]||stack[k-1],k-=1;break;case C_NOT:c(1),stack[k-1]=!stack[k-1];break;case C_PLUS:c(2),stack[k-2]=stack[k-2]+stack[k-1],k-=1;break;case C_MINUS:c(2),stack[k-2]=stack[k-2]-stack[k-1],k-=1;break;case C_TIMES:c(2),stack[k-2]=stack[k-2]*stack[k-1],k-=1;break;case C_DIVIDE:c(2),stack[k-2]=stack[k-2]/stack[k-1],k-=1;break;case C_MOD:c(2),stack[k-2]=stack[k-2]%stack[k-1],k-=1;break;case C_INC:c(1),stack[k-1]++;break;case C_DEC:c(1),stack[k-1]--;break;case C_DIFF:c(2),stack[k-2]=I(stack[k-2]-stack[k-1]),k-=1;break;case C_EQ:c(2),stack[k-2]=stack[k-2]==stack[k-1],k-=1;break;case C_NE:c(2),stack[k-2]=stack[k-2]!=stack[k-1],k-=1;break;case C_GT:c(2),stack[k-2]=stack[k-2]>stack[k-1],k-=1;break;case C_GE:c(2),stack[k-2]=stack[k-2]>=stack[k-1],k-=1;break;case C_LT:c(2),stack[k-2]=stack[k-2]<stack[k-1],k-=1;break;case C_LE:c(2),stack[k-2]=stack[k-2]<=stack[k-1],k-=1;break;case C_IFTE:c(3),stack[k-3]=stack[k-3]?stack[k-2]:stack[k-1],k-=2;break;case C_ABS:c(1),stack[k-1]=I(stack[k-1]);break;case C_MIN:c(2),stack[k-2]=s(stack[k-2],stack[k-1]),k-=1;break;case C_MAX:c(2),stack[k-2]=r(stack[k-2],stack[k-1]),k-=1;break;case C_REGA:n(1),stack[k]=reg[0],k-=-1;break;case C_REGB:n(1),stack[k]=reg[1],k-=-1;break;case C_REGC:n(1),stack[k]=reg[2],k-=-1;break;case C_REGD:n(1),stack[k]=reg[3],k-=-1;break;case C_REGZ:n(1),stack[k]=reg[REG_IDX],k-=-1;break;case C_REGN:c(1),stack[k-1]=stack[k-1]>=0&&stack[k-1]<=REG_IDX?reg[stack[k-1]]:0;break;case C_REGCYC:n(1),stack[k]=reg[reg[REG_IDX]],k-=-1;break;case C_STA:c(1),reg[0]=stack[k-1],k-=1;break;case C_STB:c(1),reg[1]=stack[k-1],k-=1;break;case C_STC:c(1),reg[2]=stack[k-1],k-=1;break;case C_STD:c(1),reg[3]=stack[k-1],k-=1;break;case C_STZ:c(1),reg[REG_IDX]=stack[k-1],k-=1;break;case C_STN:c(2),stack[k-1]>=0&&stack[k-1]<=REG_IDX&&(reg[stack[k-1]]=stack[k-2]),k-=2;break;case C_STCYC:c(1),reg[reg[REG_IDX]]=stack[k-1],reg[REG_IDX]=reg[REG_IDX]+1&REG_MAX,k-=1;break;case C_STAIF:c(2),stack[k-1]&&(reg[0]=stack[k-2]),k-=2;break;case C_STBIF:c(2),stack[k-1]&&(reg[1]=stack[k-2]),k-=2;break;case C_STCIF:c(2),stack[k-1]&&(reg[2]=stack[k-2]),k-=2;break;case C_STDIF:c(2),stack[k-1]&&(reg[3]=stack[k-2]),k-=2;break;case C_STZIF:c(2),stack[k-1]&&(reg[REG_IDX]=stack[k-2]),k-=2;break;case C_STNIF:c(3),stack[k-1]&&stack[k-2]>=0&&stack[k-2]<=REG_IDX&&(reg[stack[k-2]]=stack[k-3]),k-=3;break;case C_STCYCIF:c(2),stack[k-1]&&(reg[reg[REG_IDX]]=stack[k-2],reg[REG_IDX]=reg[REG_IDX]+1&REG_MAX),k-=2;break;case C_LOOPSTART:if(c(0),d>=0)break;d=l,S=0;break;case C_LOOPREG:if(n(1),0>d)break;stack[k]=reg[S],k-=-1;break;case C_LOOPMAX:c(2),stack[k-2]=r(stack[k-2],stack[k-1]),S++<REG_MAX?l=d:d=-1,k-=1;break;case C_TDIFF:c(1),stack[k-1]=I(_-stack[k-1]);break;case C_IDIFF:c(1),stack[k-1]=I(a-stack[k-1]);break;case C_PRINT:c(1),Serial.print(stack[k-1]);break;default:n(1),stack[k++]=e[l]}if(E)return"";if(0>k)return alert("Uncaught stack underflow!"),"";if(k>=STACK_SIZE)return alert("Uncaught stack overflow!"),"";stack[k-1]&=65535,stack[k-1]>32767&&(stack[k-1]=stack[k-1]-65536)}return alert("No return value!"),""}function load_code(e){var _=document.getElementById("code_raw");_.value=e;var _=document.getElementById("code");_.textContent="";for(var _=document.getElementById("code_widgets");_.firstChild;)_.removeChild(_.firstChild);prog()}function clear(){draw([0,C_VALUE],0)}function draw(e,_){for(var a=Math.floor(256*Math.random()),C=0;600>C;C++){ctx.fillStyle="#ffffff";var t=runCmd(e,_,C,a);if(!t)return void(run=0);ctx.fillStyle=t,200>C?ctx.fillRect(1,5*(200-C),4,4):400>C?ctx.fillRect(5*(C-199),1,4,4):ctx.fillRect(1004,5*(C-399),4,4)}}function reprog(){var e=document.getElementById("code_raw");load_code(e.value)}function prog(){resolve();var p=document.getElementById("code");code=eval("["+p.textContent+"]"),console.log(code,code.length),clear()}function loop(e){void 0!==e&&(run=e);var _=new Date,a=_.getTime(),C=4294967295&a;draw(code,C),run&&setTimeout(loop,100)}function CRGB(e,_,a){return e&=255,_&=255,a&=255,str="000000"+((e<<16)+(_<<8)+a).toString(16),"#"+str.slice(-6)}function CHSV(e,_,a){e&=255,_&=255,a&=255;var C=e%42*255/42|0,t=(255-_)*a/255|0,c=(255-C*_/255)*a/255|0,n=(255-(255-C)*_/255)*a/255|0,s=0,r=0,I=0;switch(~~(e/42)%6){case 0:s=a,r=n,I=t;break;case 1:s=c,r=a,I=t;break;case 2:s=t,r=a,I=n;break;case 3:s=t,r=c,I=a;break;case 4:s=n,r=t,I=a;break;case 5:s=a,r=t,I=c}return CRGB(s,r,I)}function resolve(){var e=document.getElementById("code_raw"),_=document.getElementById("code"),a=e.value.split(",").map(function(e){return e.trim()});console.log(a);for(var C=0,t=a.length;t>C;C++)if(w=a[C].slice(1,-1),"$"==w[0]){var c=w.substring(1).split("_"),n=c[0],s=document.getElementById("codeparam_"+n+"_value");null===s?(addwidget(c),a[C]=c[1]):a[C]=s.value}_.textContent=a.join(", ")}function addwidget(e){var _=document.getElementById("code_widgets"),a=document.createElement("div");name=e[0];var C=document.createElement("label");C.htmlFor="codeparam_"+name+"_value",C.textContent=name,C.id="codeparam_"+name+"_name",a.appendChild(C);var C=document.createElement("input");C.setAttribute("type","number"),C.setAttribute("min",0),C.value=e[1],C.id="codeparam_"+name+"_value",C.onchange=prog,a.appendChild(C);var t="";if(3==e.length&&("h"==e[2]?(e[2]=0,e[3]=255,t="linear-gradient(to right, red,orange,yellow,green,aqua,blue,purple, pink, red)"):"s"==e[2]?(e[2]=0,e[3]=255,t="linear-gradient(to right, white, red)"):"v"==e[2]&&(e[2]=0,e[3]=255,t="linear-gradient(to right, black, white)")),4==e.length){var c=document.createElement("input");c.setAttribute("type","range"),c.setAttribute("min",e[2]),c.setAttribute("max",e[3]),c.value=e[1],c.id="codeparam_"+name+"_slider",c.onchange=function(){console.log(this.value),C.value=this.value,C.onchange()},t&&(c.style.background=t),a.appendChild(c)}_.appendChild(a)}function upload(){resolve();for(var p=document.getElementById("code"),arr=eval("["+p.textContent+"]"),bytes=[36,80,82,79,71,arr.length],i=0,len=arr.length;len>i;i++)bytes.push(255&arr[i]),bytes.push((65535&arr[i])>>8);connection_send(bytes)}function sendcmd(e){connection_send(e)}function connection_send(e){for(var _=new Uint8Array(e.length),a=0,C=e.length;C>a;a++)_[a]=e[a];console.log(e.length),connection.send(_.buffer)}var C_RGB=-1,C_HSV=-2,C_HUE=-3,C_VALUE=-4,C_TIME=-10,C_TIMESHIFT=-11,C_INDEX=-12,C_RANDOM8=-13,C_RANDC=-14,C_RSHIFT=-20,C_LSHIFT=-21,C_BITAND=-22,C_BITOR=-23,C_BITXOR=-24,C_BITNOT=-25,C_AND=-26,C_OR=-27,C_NOT=-28,C_PLUS=-30,C_MINUS=-31,C_TIMES=-32,C_DIVIDE=-33,C_MOD=-34,C_INC=-35,C_DEC=-36,C_DIFF=-37,C_EQ=-40,C_NE=-41,C_GT=-42,C_GE=-43,C_LT=-44,C_LE=-45,C_IFTE=-50,C_ABS=-60,C_MIN=-61,C_MAX=-62,C_REGA=-70,C_REGB=-71,C_REGC=-72,C_REGD=-73,C_REGZ=-74,C_REGN=-75,C_REGCYC=-76,C_STA=-80,C_STB=-81,C_STC=-82,C_STD=-83,C_STZ=-84,C_STN=-85,C_STCYC=-86,C_STAIF=-90,C_STBIF=-91,C_STCIF=-92,C_STDIF=-93,C_STZIF=-94,C_STNIF=-95,C_STCYCIF=-96,C_LOOPSTART=-100,C_LOOPREG=-101,C_LOOPMAX=-102,C_TDIFF=-110,C_IDIFF=-111,C_PRINT=-120,REG_WIDTH=4,REG_IDX=1<<REG_WIDTH,REG_MAX=REG_IDX-1,STACK_SIZE=64,code_alloff="  0, 0, 0, C_RGB\n",code_allon="  255, 255, 255, C_RGB\n",code_solid="  '$hue_0_h', '$sat_255_s', '$val_255_v', C_HSV\n",code_rainbow="    C_TIME, '$speed_4', C_RSHIFT,\n    C_INDEX, '$width_2', C_LSHIFT,\n  C_MINUS, 255, C_BITAND,\n  '$sat_255_s',\n  '$value_255_v',\n  C_HSV\n",code_colorwave="  C_TIME, '$colorspeed_6', C_RSHIFT,\n  255,\n    C_TIME, '$pulsespeed_4', C_RSHIFT,\n    C_INDEX, '$pulsewidth_4', C_LSHIFT,\n    C_PLUS, 511, C_MOD,\n  255, C_MINUS, C_ABS,\n  C_HSV\n",code_rainbowwave="    C_TIME, '$colorspeed_6', C_RSHIFT,\n    C_INDEX, '$colorwidth_1', C_LSHIFT,\n  C_MINUS, 255, C_BITAND,\n  255,\n    C_TIME, '$pulsespeed_4', C_RSHIFT,\n    C_INDEX, '$pulsewidth_4', C_LSHIFT,\n    C_PLUS, 511, C_MOD,\n  255, C_MINUS, C_ABS,\n  C_HSV\n",code_weird="  '$colorspeed_8', C_TIMESHIFT,\n  255,\n    '$pulsespeeda_2', C_TIMESHIFT, C_INDEX, '$pulsewidth_4', C_LSHIFT, C_PLUS, 511, C_BITAND,\n    511,\n    '$pulsewidthb_4', C_TIMESHIFT, C_INDEX, '$pulsewidth_4', C_LSHIFT, C_PLUS, 511, C_BITAND,\n    C_MINUS,\n  C_MAX, 256, C_MINUS, C_HSV\n",code_calrunner2="  5,C_TIMESHIFT,C_INDEX,C_PLUS,32,C_BITAND,145,39,C_IFTE, 4,C_TIMESHIFT, 127, C_BITAND, C_INDEX, 127, C_BITAND, C_EQ, 0, 255, C_IFTE, 255, C_HSV\n",code_calrunner="  6,C_TIMESHIFT,C_INDEX,C_PLUS,32,C_BITAND,C_STA,\nC_REGA,145,39,C_IFTE, 4,C_TIMESHIFT, 127, C_BITAND, C_INDEX, 127, C_BITAND, C_EQ, 0, 255, C_IFTE, 255, C_HSV\n",code_calblink="  5,C_TIMESHIFT,C_INDEX,C_PLUS,32,C_BITAND,C_STA,\nC_REGA,145,39,C_IFTE, C_RANDC, 1023, C_BITAND, C_INDEX, C_EQ, 0, 255, C_IFTE, 255, C_HSV\n",code_cal="  5,C_TIMESHIFT,C_INDEX,C_PLUS,32,C_BITAND,C_STA,\nC_REGA,0,253,C_IFTE,C_REGA,50,181,C_IFTE,C_REGA,98,21,C_IFTE, C_RGB\n",code_ucla="10,C_TIMESHIFT,C_INDEX,5,C_RSHIFT,C_PLUS,1,C_BITAND,C_STA,\nC_REGA,145,39,C_IFTE,C_REGA,188,255,C_IFTE,C_REGA,191,255,C_IFTE, C_HSV\n",code_blink="  C_INDEX, C_REGA, C_REGA, 255, C_BITXOR, C_IFTE, C_STA,\n255,0,C_REGA, C_HSV\n",code_weirdwave="  6, C_TIMESHIFT, C_INDEX, C_MINUS,\n  255,\n    2, C_TIMESHIFT, C_INDEX, 4, C_LSHIFT, C_PLUS, 511, C_BITAND,\n    511,\n    4, C_TIMESHIFT, C_INDEX, 4, C_LSHIFT, C_PLUS, 511, C_BITAND,\n    C_MINUS,\n  C_MAX, 256, C_MINUS, C_HSV\n",code_weirdwave2="  6, C_TIMESHIFT, C_INDEX, 1, C_RSHIFT, C_MINUS,\n  255,\n    2, C_TIMESHIFT, C_INDEX, 4, C_LSHIFT, C_PLUS, 511, C_BITAND,\n    511,\n    4, C_TIMESHIFT, C_INDEX, 4, C_LSHIFT, C_PLUS, 511, C_BITAND,\n    C_MINUS,\n  C_MAX, 256, C_MINUS, C_HSV\n",code_usa="      C_INDEX, 6, C_TIMESHIFT, C_PLUS, 32, C_BITAND,\n      '$hue1_0',\n      '$hue2_160',\n    C_IFTE,\n      C_INDEX, 7, C_TIMESHIFT, C_MINUS, 7, C_BITAND,\n      255,\n      0,\n    C_IFTE,\n    255,\n  C_HSV\n",code_usa2="  C_INDEX, 6, C_TIMESHIFT, C_PLUS, C_STA,\n      C_REGA, 32, C_BITAND,\n      '$hue1_0',\n      '$hue2_160',\n    C_IFTE,\n      C_INDEX, 7, C_TIMESHIFT, C_MINUS, 7, C_BITAND,\n      255, C_REGA, 31, C_BITAND, 16, C_DIFF, 15, C_MIN, 4, C_LSHIFT, C_MINUS,\n      0,\n    C_IFTE,\n    255,\n  C_HSV\n",code_usa3="  C_INDEX, 6, C_TIMESHIFT, C_PLUS, C_STA,\n      C_REGA, 32, C_BITAND,\n      '$hue1_0',\n      '$hue2_160',\n    C_IFTE,\n      C_INDEX, 7, C_TIMESHIFT, C_MINUS, 7, C_BITAND,\n      255, C_REGA, 31, C_BITAND, 1, C_LSHIFT, 32, C_DIFF, 17, C_MINUS, 0, C_MAX, 4, C_LSHIFT, C_MINUS,\n      0,\n    C_IFTE,\n    255,\n  C_HSV\n",code_usa4="  C_INDEX, 6, C_TIMESHIFT, C_PLUS, C_STA,\n      C_REGA, 32, C_BITAND,\n      '$hue1_0',\n      '$hue2_160',\n    C_IFTE,\n    255, C_REGA, 31, C_BITAND, 1, C_LSHIFT, 32, C_DIFF, 17, C_MINUS, 0, C_MAX, 4, C_LSHIFT, C_MINUS,\n    255,\n  C_HSV\n",code_dots="      C_INDEX, '$colorshift_6', C_TIMESHIFT, C_PLUS, 1, '$width_5', C_LSHIFT, C_BITAND,\n      '$hue1_0',\n      '$hue2_96',\n    C_IFTE,\n    255,\n    C_INDEX, '$gapshift_7', C_TIMESHIFT, C_MINUS, '$gap_7', C_BITAND, 0, 255, C_IFTE,\n  C_HSV\n",code_vday="  C_INDEX, '$dotshift_7', C_TIMESHIFT, C_MINUS, '$dotpattern_10', C_BITAND, C_STB,\n      C_REGB,\n      '$hue1_220_h',\n      '$hue2_0_h',\n    C_IFTE,\n      C_REGB,\n      C_INDEX, '$pulseshift_4', C_TIMESHIFT, C_PLUS,\n        63, C_BITAND,\n        1, C_LSHIFT,\n        64, C_DIFF,\n        33, C_MINUS,\n        0, C_MAX,\n        3, C_LSHIFT,\n      255,\n    C_IFTE,\n    '$value_255',\n  C_HSV\n",code_patterns={alloff:code_alloff,allon:code_allon,solid:code_solid,rainbow:code_rainbow,colorwave:code_colorwave,rainbowwave:code_rainbowwave,weird:code_weird,calrunner2:code_calrunner2,calrunner:code_calrunner,calblink:code_calblink,cal:code_cal,ucla:code_ucla,blink:code_blink,weirdwave:code_weirdwave,weirdwave2:code_weirdwave2,usa:code_usa,usa2:code_usa2,usa3:code_usa3,usa4:code_usa4,dots:code_dots,vday:code_vday},stack=[],reg=[0,0,0,0,0],c,ctx,run=0;window.onload=function(){c=document.getElementById("lights"),ctx=c.getContext("2d");var e=document.getElementById("code_buttons"),_=document.createElement("select");for(key in code_patterns){var a=document.createElement("option");a.text="Pattern: "+key,a.onmouseup=new Function('load_code(code_patterns["'+key+'"]);'),_.appendChild(a)}e.appendChild(_),load_code(code_patterns.rainbow),clear(),loop(1)};var code=[C_TIME,4,C_RSHIFT,C_INDEX,3,C_LSHIFT,C_PLUS,6,C_TIMES,256,6,C_TIMES,C_MOD,255,255,C_HSV],connection=new WebSocket("ws://"+location.hostname+":81/",["arduino"]);connection.binaryType="arraybuffer",connection.onopen=function(){connection.send("Connect "+new Date)},connection.onerror=function(e){console.log("WebSocket Error ",e)},connection.onmessage=function(e){console.log("Server: ",e.data)};